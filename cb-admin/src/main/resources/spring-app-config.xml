<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
                           http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
    <context:component-scan base-package="com.yunxin">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--配置aop自动创建代理-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--<bean id="aspectLogger" class="com.yunxin.upoa.aop.AspectLogger"></bean>-->

    <!--配置定时任务-->
    <task:annotation-driven executor="myExecutor" scheduler="myScheduler"/>
    <task:executor id="myExecutor" pool-size="5"/>
    <task:scheduler id="myScheduler" pool-size="10"/>


    <jpa:repositories base-package="com.yunxin.*.*.dao" transaction-manager-ref="transactionManager"
                      entity-manager-factory-ref="entityManagerFactory"
                      repository-impl-postfix="Impl"/>

    <!-- 定义受环境影响易变的变量 -->
    <bean id="configProperties" name="configProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <!-- 服务器生产环境配置 <value>classpath*:/application.properties</value> -->
                <value>classpath*:/application.properties</value>
            </list>
        </property>
    </bean>

    <bean class="com.yunxin.core.annotation.AnnotationBeanPostProcessor">
        <property name="properties" ref="configProperties"/>
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>

    <!-- 全局系统配置 -->
    <!--<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">-->
    <!--<property name="jndiName" value="${jndi.name}"/>-->
    <!--</bean>-->

    <!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialSize" value="${dbcp.initialSize}"/>
        <property name="maxActive" value="${dbcp.maxActive}"/>
        <property name="maxIdle" value="${dbcp.maxIdle}"/>
        <property name="defaultAutoCommit" value="false"/>
        <!--<property name="validationQuery" value="${validation.query}"/>-->
    </bean>

    <!-- Jpa Entity Manager 配置 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="packagesToScan">
            <list>
                <value>com.yunxin.cb.*.entity</value>
            </list>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.provider_class}</prop>
                <!--<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>-->
                <!--<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>-->
                <!--<prop key="javax.persistence.sharedCache.mode">${javax.persistence.sharedCache.mode}</prop>-->
                <prop key="hibernate.physical_naming_strategy">${hibernate.physical_naming_strategy}</prop>
                <!--<prop key="hibernate.ejb.naming_strategy">com.yunxin.core.orm.UnderscoresNamingStrategy</prop>-->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <!-- 配置 hibernate boolean型与 数据库 char(1) 的映射 -->
                <prop key="query.substitutions">true 1,false 0</prop>
                <!-- 打开hibernate统计功能，测试中使用hibernate的统计类 -->
                <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.search.default.indexBase">${hibernate.search.default.indexBase}</prop>
                <prop key="hibernate.search.lucene_version">LUCENE_36</prop>

            </props>
        </property>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property>
    </bean>

    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="database" value="MYSQL"/>
        <property name="showSql" value="${hibernate.show_sql}"/>
        <property name="generateDdl" value="false"/>
    </bean>

    <bean id="defaultLobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" lazy-init="true"/>


    <!--事务管理器配置,单数据源事务 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>i18n_message</value>
                <value>i18n_validate</value>
            </list>
        </property>
        <property name="cacheSeconds" value="30"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>

</beans>