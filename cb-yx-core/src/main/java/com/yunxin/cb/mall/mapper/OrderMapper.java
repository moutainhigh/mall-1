package com.yunxin.cb.mall.mapper;

import com.yunxin.cb.mall.entity.Order;
import com.yunxin.cb.mall.entity.Seller;
import com.yunxin.cb.mall.entity.meta.DeliveryState;
import com.yunxin.cb.mall.entity.meta.OrderState;
import com.yunxin.cb.util.page.Query;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;
import java.util.Set;

@Mapper
public interface OrderMapper {

    final static String columns = "ORDER_ID, ORDER_CODE, ORDER_STATE, PAYMENT_STATE, AUDIT_STATE, CONSIGNEE_NAME, " +
            "        CONSIGNEE_MOBILE, CONSIGNEE_TELEPHONE, POST_CODE, PROVINCE, CITY, DISTRICT," +
            "       CONSIGNEE_ADDRESS, CUSTOMER_ID, SELLER_ID, AUDIT_REMARK, AUDIT_TIME, DELIVER_TIME, " +
            "        COLLECT_TIME, CANCEL_TIME, CANCEL_REASON, TOTAL_PRICE, DELIVERY_FEE_TOTAL, FEE_TOTAL, " +
            "        PROD_QUANTITY, DELIVERY_STATE, COURIER_NUMBER, LOGISTIC_NAME, LOGISTIC_CODE, " +
            "        PAYMENT_TIME, PAYMENT_TYPE, FINISH_TIME, BUYER_MESSAGE, ENABLED, REMARK, UPDATE_TIME, " +
            "        CREATE_TIME";

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_form
     *
     * @mbg.generated Wed Jul 18 10:16:09 CST 2018
     */
    @Delete({
        "delete from yx_order",
        "where ORDER_ID = #{orderId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer orderId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yx_order
     *
     * @mbg.generated Wed Jul 18 10:16:09 CST 2018
     */
    @Insert({
        "insert into yx_order (",
            columns, ")",
            "values (#{orderId,jdbcType=INTEGER}, #{orderCode,jdbcType=VARCHAR}, ",
            "#{orderState,jdbcType=INTEGER}, #{paymentState,jdbcType=INTEGER}, ",
            "#{auditState,jdbcType=INTEGER}, #{consigneeName,jdbcType=VARCHAR}, ",
            "#{consigneeMobile,jdbcType=VARCHAR}, #{consigneeTelephone,jdbcType=VARCHAR}, ",
            "#{postCode,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, ",
            "#{city,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, ",
            "#{consigneeAddress,jdbcType=VARCHAR}, #{customerId,jdbcType=INTEGER}, ",
            "#{sellerId,jdbcType=INTEGER}, #{auditRemark,jdbcType=VARCHAR}, ",
            "#{auditTime,jdbcType=TIMESTAMP}, #{deliverTime,jdbcType=TIMESTAMP}, ",
            "#{collectTime,jdbcType=TIMESTAMP}, #{cancelTime,jdbcType=TIMESTAMP}, ",
            "#{cancelReason,jdbcType=VARCHAR}, #{totalPrice,jdbcType=DOUBLE}, ",
            "#{deliveryFeeTotal,jdbcType=DOUBLE}, #{feeTotal,jdbcType=DOUBLE}, ",
            "#{prodQuantity,jdbcType=INTEGER}, #{deliveryState,jdbcType=INTEGER}, ",
            "#{courierNumber,jdbcType=VARCHAR}, #{logisticName,jdbcType=VARCHAR}, ",
            "#{logisticCode,jdbcType=VARCHAR}, #{paymentTime,jdbcType=TIMESTAMP}, ",
            "#{paymentType,jdbcType=INTEGER}, #{finishTime,jdbcType=TIMESTAMP}, ",
            "#{buyerMessage,jdbcType=VARCHAR}, #{enabled,jdbcType=BIT}, ",
            "#{remark,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, ",
            "#{createTime,jdbcType=TIMESTAMP})"
    })
    @Options(useGeneratedKeys=true, keyProperty="orderId", keyColumn="ORDER_ID")
    int insert(Order record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yx_order
     *
     * @mbg.generated Wed Jul 18 10:16:09 CST 2018
     */
    @Select({
        "select",
            columns,
        "from yx_order",
        "where ORDER_ID = #{orderId,jdbcType=INTEGER}"
    })
    @Results(id = "orderMap", value = {
            @Result(column="ORDER_ID", property="orderId", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="ORDER_CODE", property="orderCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="ORDER_STATE", property="orderState", jdbcType=JdbcType.INTEGER),
            @Result(column="PAYMENT_STATE", property="paymentState", jdbcType=JdbcType.INTEGER),
            @Result(column="AUDIT_STATE", property="auditState", jdbcType=JdbcType.INTEGER),
            @Result(column="CONSIGNEE_NAME", property="consigneeName", jdbcType=JdbcType.VARCHAR),
            @Result(column="CONSIGNEE_MOBILE", property="consigneeMobile", jdbcType=JdbcType.VARCHAR),
            @Result(column="CONSIGNEE_TELEPHONE", property="consigneeTelephone", jdbcType=JdbcType.VARCHAR),
            @Result(column="POST_CODE", property="postCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="PROVINCE", property="province", jdbcType=JdbcType.VARCHAR),
            @Result(column="CITY", property="city", jdbcType=JdbcType.VARCHAR),
            @Result(column="DISTRICT", property="district", jdbcType=JdbcType.VARCHAR),
            @Result(column="CONSIGNEE_ADDRESS", property="consigneeAddress", jdbcType=JdbcType.VARCHAR),
            @Result(column="CUSTOMER_ID", property="customerId", jdbcType=JdbcType.INTEGER),
            @Result(column="SELLER_ID", property="sellerId", jdbcType=JdbcType.INTEGER),
            @Result(column="AUDIT_REMARK", property="auditRemark", jdbcType=JdbcType.VARCHAR),
            @Result(column="AUDIT_TIME", property="auditTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="DELIVER_TIME", property="deliverTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="COLLECT_TIME", property="collectTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="CANCEL_TIME", property="cancelTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="CANCEL_REASON", property="cancelReason", jdbcType=JdbcType.VARCHAR),
            @Result(column="TOTAL_PRICE", property="totalPrice", jdbcType=JdbcType.DOUBLE),
            @Result(column="DELIVERY_FEE_TOTAL", property="deliveryFeeTotal", jdbcType=JdbcType.DOUBLE),
            @Result(column="FEE_TOTAL", property="feeTotal", jdbcType=JdbcType.DOUBLE),
            @Result(column="PROD_QUANTITY", property="prodQuantity", jdbcType=JdbcType.INTEGER),
            @Result(column="DELIVERY_STATE", property="deliveryState", jdbcType=JdbcType.INTEGER),
            @Result(column="COURIER_NUMBER", property="courierNumber", jdbcType=JdbcType.VARCHAR),
            @Result(column="LOGISTIC_NAME", property="logisticName", jdbcType=JdbcType.VARCHAR),
            @Result(column="LOGISTIC_CODE", property="logisticCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="PAYMENT_TIME", property="paymentTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="PAYMENT_TYPE", property="paymentType", jdbcType=JdbcType.INTEGER),
            @Result(column="FINISH_TIME", property="finishTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="BUYER_MESSAGE", property="buyerMessage", jdbcType=JdbcType.VARCHAR),
            @Result(column="ENABLED", property="enabled", jdbcType=JdbcType.BIT),
            @Result(column="REMARK", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="UPDATE_TIME", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    Order selectByPrimaryKey(Integer orderId);

    @Select({
            "select",
            columns,
            "from yx_order",
            "where ORDER_ID = #{orderId,jdbcType=INTEGER}"
    })
    @Results(id = "orderDetailMap", value = {
            @Result(column="ORDER_ID", property="orderId", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="ORDER_CODE", property="orderCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="ORDER_STATE", property="orderState", jdbcType=JdbcType.INTEGER),
            @Result(column="PAYMENT_STATE", property="paymentState", jdbcType=JdbcType.INTEGER),
            @Result(column="AUDIT_STATE", property="auditState", jdbcType=JdbcType.INTEGER),
            @Result(column="CONSIGNEE_NAME", property="consigneeName", jdbcType=JdbcType.VARCHAR),
            @Result(column="CONSIGNEE_MOBILE", property="consigneeMobile", jdbcType=JdbcType.VARCHAR),
            @Result(column="CONSIGNEE_TELEPHONE", property="consigneeTelephone", jdbcType=JdbcType.VARCHAR),
            @Result(column="POST_CODE", property="postCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="PROVINCE", property="province", jdbcType=JdbcType.VARCHAR),
            @Result(column="CITY", property="city", jdbcType=JdbcType.VARCHAR),
            @Result(column="DISTRICT", property="district", jdbcType=JdbcType.VARCHAR),
            @Result(column="CONSIGNEE_ADDRESS", property="consigneeAddress", jdbcType=JdbcType.VARCHAR),
            @Result(column="CUSTOMER_ID", property="customerId", jdbcType=JdbcType.INTEGER),
            @Result(column="SELLER_ID", property="sellerId", jdbcType=JdbcType.INTEGER),
            @Result(column="AUDIT_REMARK", property="auditRemark", jdbcType=JdbcType.VARCHAR),
            @Result(column="AUDIT_TIME", property="auditTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="DELIVER_TIME", property="deliverTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="COLLECT_TIME", property="collectTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="CANCEL_TIME", property="cancelTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="CANCEL_REASON", property="cancelReason", jdbcType=JdbcType.VARCHAR),
            @Result(column="TOTAL_PRICE", property="totalPrice", jdbcType=JdbcType.DOUBLE),
            @Result(column="DELIVERY_FEE_TOTAL", property="deliveryFeeTotal", jdbcType=JdbcType.DOUBLE),
            @Result(column="FEE_TOTAL", property="feeTotal", jdbcType=JdbcType.DOUBLE),
            @Result(column="PROD_QUANTITY", property="prodQuantity", jdbcType=JdbcType.INTEGER),
            @Result(column="DELIVERY_STATE", property="deliveryState", jdbcType=JdbcType.INTEGER),
            @Result(column="COURIER_NUMBER", property="courierNumber", jdbcType=JdbcType.VARCHAR),
            @Result(column="LOGISTIC_NAME", property="logisticName", jdbcType=JdbcType.VARCHAR),
            @Result(column="LOGISTIC_CODE", property="logisticCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="PAYMENT_TIME", property="paymentTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="PAYMENT_TYPE", property="paymentType", jdbcType=JdbcType.INTEGER),
            @Result(column="FINISH_TIME", property="finishTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="BUYER_MESSAGE", property="buyerMessage", jdbcType=JdbcType.VARCHAR),
            @Result(column="ENABLED", property="enabled", jdbcType=JdbcType.BIT),
            @Result(column="REMARK", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="UPDATE_TIME", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="ORDER_ID", property="orderItems", javaType=Set.class,
                    many=@Many(select="com.yunxin.cb.mall.dao.OrderItemMapper.selectByOrderId")),
            @Result(column="SELLER_ID", property="seller", javaType=Seller.class,
                    one=@One(select="com.yunxin.cb.mall.dao.SellerMapper.selectByPrimaryKey"))
    })
    Order selectRelationById(Integer orderId);

    @Select({
            "select",
                columns,
            "from yx_order",
            "where ORDER_ID = #{orderId,jdbcType=INTEGER}",
            "and CUSTOMER_ID = #{customerId,jdbcType=INTEGER}"
    })
    @ResultMap(value="orderDetailMap")
    Order selectByOrderIdAndCustomerId(@Param("orderId") Integer orderId, @Param("customerId")Integer customerId);

    /**
     * 根据订单编号查询订单
    * @author gws
    * @date 2018/7/26 17:32
    * @param orderCode
    * @return com.yunxin.cb.mall.entity.Order
    */
    @Select({
            "select",
            columns,
            "from yx_order",
            "where ORDER_CODE = #{orderCode,jdbcType=INTEGER}"
    })
    @ResultMap(value="orderMap")
    Order selectByOrderCode(@Param("orderCode") String orderCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yx_order
     *
     * @mbg.generated Wed Jul 18 10:16:09 CST 2018
     */
    @Select({
        "select",
            columns,
        "from yx_order"
    })
    @ResultMap(value="orderMap")
    List<Order> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yx_order
     *
     * @mbg.generated Wed Jul 18 10:16:09 CST 2018
     */
    @Update({
        "update yx_order",
            "set ORDER_CODE = #{orderCode,jdbcType=VARCHAR},",
            "ORDER_STATE = #{orderState,jdbcType=INTEGER},",
            "PAYMENT_STATE = #{paymentState,jdbcType=INTEGER},",
            "AUDIT_STATE = #{auditState,jdbcType=INTEGER},",
            "CONSIGNEE_NAME = #{consigneeName,jdbcType=VARCHAR},",
            "CONSIGNEE_MOBILE = #{consigneeMobile,jdbcType=VARCHAR},",
            "CONSIGNEE_TELEPHONE = #{consigneeTelephone,jdbcType=VARCHAR},",
            "POST_CODE = #{postCode,jdbcType=VARCHAR},",
            "PROVINCE = #{province,jdbcType=VARCHAR},",
            "CITY = #{city,jdbcType=VARCHAR},",
            "DISTRICT = #{district,jdbcType=VARCHAR},",
            "CONSIGNEE_ADDRESS = #{consigneeAddress,jdbcType=VARCHAR},",
            "CUSTOMER_ID = #{customerId,jdbcType=INTEGER},",
            "SELLER_ID = #{sellerId,jdbcType=INTEGER},",
            "AUDIT_REMARK = #{auditRemark,jdbcType=VARCHAR},",
            "AUDIT_TIME = #{auditTime,jdbcType=TIMESTAMP},",
            "DELIVER_TIME = #{deliverTime,jdbcType=TIMESTAMP},",
            "COLLECT_TIME = #{collectTime,jdbcType=TIMESTAMP},",
            "CANCEL_TIME = #{cancelTime,jdbcType=TIMESTAMP},",
            "CANCEL_REASON = #{cancelReason,jdbcType=VARCHAR},",
            "TOTAL_PRICE = #{totalPrice,jdbcType=DOUBLE},",
            "DELIVERY_FEE_TOTAL = #{deliveryFeeTotal,jdbcType=DOUBLE},",
            "FEE_TOTAL = #{feeTotal,jdbcType=DOUBLE},",
            "PROD_QUANTITY = #{prodQuantity,jdbcType=INTEGER},",
            "DELIVERY_STATE = #{deliveryState,jdbcType=INTEGER},",
            "COURIER_NUMBER = #{courierNumber,jdbcType=VARCHAR},",
            "LOGISTIC_NAME = #{logisticName,jdbcType=VARCHAR},",
            "LOGISTIC_CODE = #{logisticCode,jdbcType=VARCHAR},",
            "PAYMENT_TIME = #{paymentTime,jdbcType=TIMESTAMP},",
            "PAYMENT_TYPE = #{paymentType,jdbcType=INTEGER},",
            "FINISH_TIME = #{finishTime,jdbcType=TIMESTAMP},",
            "BUYER_MESSAGE = #{buyerMessage,jdbcType=VARCHAR},",
            "ENABLED = #{enabled,jdbcType=BIT},",
            "REMARK = #{remark,jdbcType=VARCHAR},",
            "UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},",
            "CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}",
            "where ORDER_ID = #{orderId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Order record);

    @Select({
            "<script>",
            "select",
                columns,
            "from yx_order",
            "where 1=1",
            "<if test='data.customerId!=null'>",
            "and CUSTOMER_ID = #{data.customerId}",
            "</if>",
            "<if test='data.orderState!=null'>",
            "and ORDER_STATE = #{data.orderState}",
            "</if>",
            "ORDER BY CREATE_TIME DESC",
            "LIMIT #{rowIndex},#{pageSize}",
            "</script>"
    })
    @ResultMap(value="orderDetailMap")
    List<Order> pageList(Query q);

    @Select({
            "<script>",
            "select",
            "count(ORDER_ID)",
            "from yx_order",
            "where 1=1",
            "<if test='data.customerId!=null'>",
                 "and CUSTOMER_ID = #{data.customerId}",
            "</if>",
            "<if test='data.orderState!=null'>",
                "and ORDER_STATE = #{data.orderState}",
            "</if>",
            "</script>"
    })
    long count(Query q);

    @Update({
            "<script>",
                "update yx_order",
                "set ",
                "<if test='deliveryState!=null'>",
                    "DELIVERY_STATE = #{deliveryState,jdbcType=INTEGER},",
                "</if>",
                "COLLECT_TIME = now(),",
                "UPDATE_TIME = now(),",
                "ORDER_STATE = #{orderState,jdbcType=INTEGER}",
                "where ORDER_ID = #{orderId,jdbcType=INTEGER}",
                "and CUSTOMER_ID = #{customerId,jdbcType=INTEGER}",
            "</script>"
    })
    int updateStateByOrderIdAndCustomerId(@Param("orderId") int orderId, @Param("customerId") int customerId,
                                          @Param("orderState") OrderState orderState, @Param("deliveryState") DeliveryState deliveryState);
}