package com.yunxin.cb.mall.mapper;

import com.yunxin.cb.mall.entity.CustomerWallet;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;
@Mapper
public interface CustomerWalletMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_wallet
     *
     * @mbg.generated Sat Jul 21 10:44:05 CST 2018
     */
    @Delete({
        "delete from customer_wallet",
        "where CUSTOMER_ID = #{customerId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer customerId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_wallet
     *
     * @mbg.generated Sat Jul 21 10:44:05 CST 2018
     */
    @Insert({
        "insert into customer_wallet (WALLET_ID, CUSTOMER_ID, AVAILABLE_BALANCE, ",
        "EXPECTED_RETURN_AMOUNT, LOAN_QUOTA, ",
        "ARREARS_AMOUNT, CREATE_TIME, ",
        "UPDATE_TIME)",
        "values (#{walletId,jdbcType=INTEGER},#{customerId,jdbcType=INTEGER}, #{availableBalance,jdbcType=DOUBLE}, ",
        "#{expectedReturnAmount,jdbcType=DOUBLE}, #{loanQuota,jdbcType=DOUBLE}, ",
        "#{arrearsAmount,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP})"
    })
    int insert(CustomerWallet record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_wallet
     *
     * @mbg.generated Sat Jul 21 10:44:05 CST 2018
     */
    @Select({
        "select",
        "WALLET_ID, CUSTOMER_ID, AVAILABLE_BALANCE, EXPECTED_RETURN_AMOUNT, LOAN_QUOTA, ARREARS_AMOUNT, ",
        "CREATE_TIME, UPDATE_TIME",
        "from customer_wallet",
        "where WALLET_ID = #{walletId,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="WALLET_ID", property="walletId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="CUSTOMER_ID", property="customerId", jdbcType=JdbcType.INTEGER),
        @Result(column="AVAILABLE_BALANCE", property="availableBalance", jdbcType=JdbcType.DOUBLE),
        @Result(column="EXPECTED_RETURN_AMOUNT", property="expectedReturnAmount", jdbcType=JdbcType.DOUBLE),
        @Result(column="LOAN_QUOTA", property="loanQuota", jdbcType=JdbcType.DOUBLE),
        @Result(column="ARREARS_AMOUNT", property="arrearsAmount", jdbcType=JdbcType.DOUBLE),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="UPDATE_TIME", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    CustomerWallet selectByPrimaryKey(Integer walletId);

    @Select({
            "select",
            "WALLET_ID, CUSTOMER_ID, AVAILABLE_BALANCE, EXPECTED_RETURN_AMOUNT, LOAN_QUOTA, ARREARS_AMOUNT, ",
            "CREATE_TIME, UPDATE_TIME",
            "from customer_wallet",
            "where CUSTOMER_ID = #{customerId,jdbcType=INTEGER}"
    })
    @Results({
            @Result(column="WALLET_ID", property="walletId", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="CUSTOMER_ID", property="customerId", jdbcType=JdbcType.INTEGER),
            @Result(column="AVAILABLE_BALANCE", property="availableBalance", jdbcType=JdbcType.DOUBLE),
            @Result(column="EXPECTED_RETURN_AMOUNT", property="expectedReturnAmount", jdbcType=JdbcType.DOUBLE),
            @Result(column="LOAN_QUOTA", property="loanQuota", jdbcType=JdbcType.DOUBLE),
            @Result(column="ARREARS_AMOUNT", property="arrearsAmount", jdbcType=JdbcType.DOUBLE),
            @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="UPDATE_TIME", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    CustomerWallet selectByCustomerId(Integer customerId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_wallet
     *
     * @mbg.generated Sat Jul 21 10:44:05 CST 2018
     */
    @Select({
        "select",
        "WALLET_ID, CUSTOMER_ID, AVAILABLE_BALANCE, EXPECTED_RETURN_AMOUNT, LOAN_QUOTA, ARREARS_AMOUNT, ",
        "CREATE_TIME, UPDATE_TIME",
        "from customer_wallet"
    })
    @Results({
        @Result(column="WALLET_ID", property="walletId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="CUSTOMER_ID", property="customerId", jdbcType=JdbcType.INTEGER),
        @Result(column="AVAILABLE_BALANCE", property="availableBalance", jdbcType=JdbcType.DOUBLE),
        @Result(column="EXPECTED_RETURN_AMOUNT", property="expectedReturnAmount", jdbcType=JdbcType.DOUBLE),
        @Result(column="LOAN_QUOTA", property="loanQuota", jdbcType=JdbcType.DOUBLE),
        @Result(column="ARREARS_AMOUNT", property="arrearsAmount", jdbcType=JdbcType.DOUBLE),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="UPDATE_TIME", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<CustomerWallet> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_wallet
     *
     * @mbg.generated Sat Jul 21 10:44:05 CST 2018
     */
    @Update({
        "update customer_wallet",
        "set CUSTOMER_ID = #{customerId,jdbcType=INTEGER},",
          "AVAILABLE_BALANCE = #{availableBalance,jdbcType=DOUBLE},",
          "EXPECTED_RETURN_AMOUNT = #{expectedReturnAmount,jdbcType=DOUBLE},",
          "LOAN_QUOTA = #{loanQuota,jdbcType=DOUBLE},",
          "ARREARS_AMOUNT = #{arrearsAmount,jdbcType=DOUBLE},",
          "CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},",
          "UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}",
        "where WALLET_ID = #{walletId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(CustomerWallet record);
}