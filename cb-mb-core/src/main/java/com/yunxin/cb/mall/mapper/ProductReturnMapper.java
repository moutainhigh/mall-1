package com.yunxin.cb.mall.mapper;

import com.yunxin.cb.mall.entity.Product;
import com.yunxin.cb.mall.entity.ProductReturn;
import com.yunxin.cb.util.page.Query;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;
@Mapper
public interface ProductReturnMapper {
    final static String columns = "RETURN_ID, APPLY_TIME, PIC_PATH, PURCHASING_TIME, REASON, RETURN_REFUND_STATE, " +
            " CUSTOMER_ID, ORDER_ID, ITEM_ID, AUDIT_REMARK, AUDIT_STATE, COURIER_NUMBER, DISPOSE_TIME, " +
            " LOGISTIC_CODE, REASON_REMARK, RECEIVED_BUYER_PRODUCT, RECEIVED_SELLER_PRODUCT, " +
            " REFUND_PRICE, REFUND_REASON, RETURN_CODE, RETURN_REASON, REFUND_ONLY, REMARK, " +
            " REJECT_REASON";
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_return
     *
     * @mbg.generated Thu Jul 19 20:01:43 CST 2018
     */
    @Delete({
            "delete from product_return",
            "where RETURN_ID = #{returnId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer returnId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_return
     *
     * @mbg.generated Thu Jul 19 20:01:43 CST 2018
     */
    @Insert({
            "insert into product_return (",
            columns,")",
            "values (#{returnId,jdbcType=INTEGER}, #{applyTime,jdbcType=TIMESTAMP}, ",
            "#{picPath,jdbcType=VARCHAR}, #{purchasingTime,jdbcType=TIMESTAMP}, ",
            "#{reason,jdbcType=VARCHAR}, #{returnRefundState,jdbcType=INTEGER}, ",
            "#{customerId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, ",
            "#{itemId,jdbcType=INTEGER}, #{auditRemark,jdbcType=VARCHAR}, ",
            "#{auditState,jdbcType=INTEGER}, #{courierNumber,jdbcType=VARCHAR}, ",
            "#{disposeTime,jdbcType=TIMESTAMP}, #{logisticCode,jdbcType=VARCHAR}, ",
            "#{reasonRemark,jdbcType=VARCHAR}, #{receivedBuyerProduct,jdbcType=BIT}, ",
            "#{receivedSellerProduct,jdbcType=BIT}, #{refundPrice,jdbcType=DOUBLE}, ",
            "#{refundReason,jdbcType=INTEGER}, #{returnCode,jdbcType=VARCHAR}, ",
            "#{returnReason,jdbcType=INTEGER}, #{refundOnly,jdbcType=BIT}, ",
            "#{remark,jdbcType=VARCHAR}, #{rejectReason,jdbcType=VARCHAR})"
    })
    int insert(ProductReturn record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_return
     *
     * @mbg.generated Thu Jul 19 20:01:43 CST 2018
     */
    @Select({
            "select",
            columns,
            "from product_return",
            "where RETURN_ID = #{returnId,jdbcType=INTEGER}"
    })
    @Results(id = "productReturnRelationMap", value = {
            @Result(column="RETURN_ID", property="returnId", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="APPLY_TIME", property="applyTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="PIC_PATH", property="picPath", jdbcType=JdbcType.VARCHAR),
            @Result(column="PURCHASING_TIME", property="purchasingTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="REASON", property="reason", jdbcType=JdbcType.VARCHAR),
            @Result(column="RETURN_REFUND_STATE", property="returnRefundState", jdbcType=JdbcType.INTEGER),
            @Result(column="CUSTOMER_ID", property="customerId", jdbcType=JdbcType.INTEGER),
            @Result(column="ORDER_ID", property="orderId", jdbcType=JdbcType.INTEGER),
            @Result(column="ITEM_ID", property="itemId", jdbcType=JdbcType.INTEGER),
            @Result(column="AUDIT_REMARK", property="auditRemark", jdbcType=JdbcType.VARCHAR),
            @Result(column="AUDIT_STATE", property="auditState", jdbcType=JdbcType.INTEGER),
            @Result(column="COURIER_NUMBER", property="courierNumber", jdbcType=JdbcType.VARCHAR),
            @Result(column="DISPOSE_TIME", property="disposeTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="LOGISTIC_CODE", property="logisticCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="REASON_REMARK", property="reasonRemark", jdbcType=JdbcType.VARCHAR),
            @Result(column="RECEIVED_BUYER_PRODUCT", property="receivedBuyerProduct", jdbcType=JdbcType.BIT),
            @Result(column="RECEIVED_SELLER_PRODUCT", property="receivedSellerProduct", jdbcType=JdbcType.BIT),
            @Result(column="REFUND_PRICE", property="refundPrice", jdbcType=JdbcType.DOUBLE),
            @Result(column="REFUND_REASON", property="refundReason", jdbcType=JdbcType.INTEGER),
            @Result(column="RETURN_CODE", property="returnCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="RETURN_REASON", property="returnReason", jdbcType=JdbcType.INTEGER),
            @Result(column="REFUND_ONLY", property="refundOnly", jdbcType=JdbcType.BIT),
            @Result(column="REMARK", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="REJECT_REASON", property="rejectReason", jdbcType=JdbcType.VARCHAR),
            @Result(column="ORDER_ID", property="order", javaType=Product.class,
                    one=@One(select="com.yunxin.cb.mall.mapper.OrderMapper.selectRelationById"))
    })
    ProductReturn selectRelationById(Integer returnId);

    @Select({
            "select",
            columns,
            "from product_return",
            "where RETURN_ID = #{returnId,jdbcType=INTEGER}"
    })
    @Results(id = "productReturnMap", value = {
            @Result(column="RETURN_ID", property="returnId", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="APPLY_TIME", property="applyTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="PIC_PATH", property="picPath", jdbcType=JdbcType.VARCHAR),
            @Result(column="PURCHASING_TIME", property="purchasingTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="REASON", property="reason", jdbcType=JdbcType.VARCHAR),
            @Result(column="RETURN_REFUND_STATE", property="returnRefundState", jdbcType=JdbcType.INTEGER),
            @Result(column="CUSTOMER_ID", property="customerId", jdbcType=JdbcType.INTEGER),
            @Result(column="ORDER_ID", property="orderId", jdbcType=JdbcType.INTEGER),
            @Result(column="ITEM_ID", property="itemId", jdbcType=JdbcType.INTEGER),
            @Result(column="AUDIT_REMARK", property="auditRemark", jdbcType=JdbcType.VARCHAR),
            @Result(column="AUDIT_STATE", property="auditState", jdbcType=JdbcType.INTEGER),
            @Result(column="COURIER_NUMBER", property="courierNumber", jdbcType=JdbcType.VARCHAR),
            @Result(column="DISPOSE_TIME", property="disposeTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="LOGISTIC_CODE", property="logisticCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="REASON_REMARK", property="reasonRemark", jdbcType=JdbcType.VARCHAR),
            @Result(column="RECEIVED_BUYER_PRODUCT", property="receivedBuyerProduct", jdbcType=JdbcType.BIT),
            @Result(column="RECEIVED_SELLER_PRODUCT", property="receivedSellerProduct", jdbcType=JdbcType.BIT),
            @Result(column="REFUND_PRICE", property="refundPrice", jdbcType=JdbcType.DOUBLE),
            @Result(column="REFUND_REASON", property="refundReason", jdbcType=JdbcType.INTEGER),
            @Result(column="RETURN_CODE", property="returnCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="RETURN_REASON", property="returnReason", jdbcType=JdbcType.INTEGER),
            @Result(column="REFUND_ONLY", property="refundOnly", jdbcType=JdbcType.BIT),
            @Result(column="REMARK", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="REJECT_REASON", property="rejectReason", jdbcType=JdbcType.VARCHAR)
    })
    ProductReturn selectByPrimaryKey(Integer returnId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_return
     *
     * @mbg.generated Thu Jul 19 20:01:43 CST 2018
     */
    @Select({
            "select",
            columns,
            "from product_return"
    })
    @ResultMap(value="productReturnMap")
    List<ProductReturn> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_return
     *
     * @mbg.generated Thu Jul 19 20:01:43 CST 2018
     */
    @Update({
            "update product_return",
            "set APPLY_TIME = #{applyTime,jdbcType=TIMESTAMP},",
            "PIC_PATH = #{picPath,jdbcType=VARCHAR},",
            "PURCHASING_TIME = #{purchasingTime,jdbcType=TIMESTAMP},",
            "REASON = #{reason,jdbcType=VARCHAR},",
            "RETURN_REFUND_STATE = #{returnRefundState,jdbcType=INTEGER},",
            "CUSTOMER_ID = #{customerId,jdbcType=INTEGER},",
            "ORDER_ID = #{orderId,jdbcType=INTEGER},",
            "ITEM_ID = #{itemId,jdbcType=INTEGER},",
            "AUDIT_REMARK = #{auditRemark,jdbcType=VARCHAR},",
            "AUDIT_STATE = #{auditState,jdbcType=INTEGER},",
            "COURIER_NUMBER = #{courierNumber,jdbcType=VARCHAR},",
            "DISPOSE_TIME = #{disposeTime,jdbcType=TIMESTAMP},",
            "LOGISTIC_CODE = #{logisticCode,jdbcType=VARCHAR},",
            "REASON_REMARK = #{reasonRemark,jdbcType=VARCHAR},",
            "RECEIVED_BUYER_PRODUCT = #{receivedBuyerProduct,jdbcType=BIT},",
            "RECEIVED_SELLER_PRODUCT = #{receivedSellerProduct,jdbcType=BIT},",
            "REFUND_PRICE = #{refundPrice,jdbcType=DOUBLE},",
            "REFUND_REASON = #{refundReason,jdbcType=INTEGER},",
            "RETURN_CODE = #{returnCode,jdbcType=VARCHAR},",
            "RETURN_REASON = #{returnReason,jdbcType=INTEGER},",
            "REFUND_ONLY = #{refundOnly,jdbcType=BIT},",
            "REMARK = #{remark,jdbcType=VARCHAR},",
            "REJECT_REASON = #{rejectReason,jdbcType=VARCHAR}",
            "where RETURN_ID = #{returnId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(ProductReturn record);


    @Select({
            "select",
            columns,
            "from product_return",
            "where RETURN_ID = #{productReturnId,jdbcType=INTEGER}",
            "and CUSTOMER_ID = #{customerId,jdbcType=INTEGER}"
    })
    @ResultMap(value="productReturnRelationMap")
    ProductReturn selectByProductReturnIdAndCustomerId(@Param("productReturnId") Integer orderId, @Param("customerId")Integer customerId);

    @Select({
            "select",
            columns,
            "from product_return",
            "where ORDER_ID = #{orderId,jdbcType=INTEGER}"
    })
    @ResultMap(value="productReturnMap")
    List<ProductReturn> selectByOrderId(@Param("orderId") Integer orderId);

    @Select({
            "<script>",
            "select",
            columns,
            "from product_return",
            "where 1=1",
            "<if test='data.customerId!=null'>",
            "and CUSTOMER_ID = #{data.customerId}",
            "</if>",
            "<if test='data.returnId!=null'>",
            "and RETURN_ID = #{data.returnId}",
            "</if>",
            "<if test='data.orderId!=null'>",
            "and ORDER_ID = #{data.orderId}",
            "</if>",
            "ORDER BY APPLY_TIME DESC",
            "<if test='pageable==\"true\"'>",
            "LIMIT #{rowIndex},#{pageSize}",
            "</if>",
            "</script>"
    })
    @ResultMap(value="productReturnRelationMap")
    List<ProductReturn> pageList(Query q);

    @Select({
            "<script>",
            "select",
            "count(RETURN_ID)",
            "from product_return",
            "where 1=1",
            "<if test='data.customerId!=null'>",
            "and CUSTOMER_ID = #{data.customerId}",
            "</if>",
            "<if test='data.returnId!=null'>",
            "and RETURN_ID = #{data.returnId}",
            "</if>",
            "<if test='data.orderId!=null'>",
            "and ORDER_ID = #{data.orderId}",
            "</if>",
            "</script>"
    })
    long count(Query q);

    /**
     * 根据退货编号查询
     * @return
     */
    @Select({
            "select",
            columns,
            "from product_return",
            "where RETURN_CODE =  #{returnCode}"
    })
    @ResultMap(value="productReturnMap")
    ProductReturn selectByReturnCode(@Param("returnCode")String returnCode);

}